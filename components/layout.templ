package components

import "fmt"

type LayoutProps struct {
	HeadTags        templ.Component
	InlineScript    templ.ComponentScript
	PageDescription string
	PageImage       string
	PageTitle       string
	Scripts         templ.Component
}

templ Layout(props LayoutProps) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta
 				name="viewport"
 				content="width=device-width, initial-scale=1.0"
			/>
			<meta
 				http-equiv="X-UA-Compatible"
 				content="ie=edge"
			/>
			<meta
 				name="description"
 				if props.PageDescription != "" {
					content={ props.PageDescription }
				} else {
					content="Michael's Personal Website"
				}
			/>
			<meta
 				property="og:title"
 				if props.PageTitle != "" {
					content={ props.PageTitle }
				} else {
					content="Michael Miranda"
				}
			/>
			<meta
 				property="og:description"
 				if props.PageDescription != "" {
					content={ props.PageDescription }
				} else {
					content="Michael's Personal Website"
				}
			/>
			<meta
 				property="og:image"
 				if props.PageImage != "" {
					content={ props.PageImage }
				} else {
					content="https://michaelmiranda.dev/public/images/share.png"
				}
			/>
			<meta
 				name="twitter:title"
 				if props.PageTitle != "" {
					content={ props.PageTitle }
				} else {
					content="Michael Miranda"
				}
			/>
			<meta
 				name="twitter:description"
 				if props.PageDescription != "" {
					content={ props.PageDescription }
				} else {
					content="Michael's Personal Website"
				}
			/>
			<meta
 				name="twitter:image"
 				if props.PageImage != "" {
					content={ props.PageImage }
				} else {
					content="https://michaelmiranda.dev/public/images/share.png"
				}
			/>
			<title>
				if props.PageTitle != "" {
					{ props.PageTitle }
				} else {
					Michael Miranda
				}
			</title>
			<link
 				rel="icon"
 				href={ fmt.Sprintf("data:image/svg+xml,<svg xmlns=%%22http://www.w3.org/2000/svg%%22 viewBox=%%220 0 100 100%%22><text y=%%22.9em%%22 font-size=%%2290%%22>%s</text></svg>", "ðŸš€") }
 				type="image/svg+xml"
			/>
			<link
 				rel="stylesheet"
 				href="/public/styles/site.css"
			/>
			if props.HeadTags != nil {
				@props.HeadTags
			}
			<script defer src="/public/js/vendor/alpine@3.12.3.js"></script>
			<!-- Google tag (gtag.js) -->
			<script async src="https://www.googletagmanager.com/gtag/js?id=G-96EGTYYVB8"></script>
			<script>
				window.dataLayer = window.dataLayer || [];
				function gtag() { dataLayer.push(arguments); }
				gtag('js', new Date());
				gtag('config', 'G-96EGTYYVB8');
      </script>
		</head>
		<body class="bg-slate-50 dark:bg-slate-800 text-slate-700 dark:text-slate-200 font-inter">
			@Header()
			<main class="px-5 py-10">
				{ children... }
			</main>
			@Footer()
		</body>
		if props.InlineScript.Name != "" {
			@props.InlineScript
		}
	</html>
}
